{"docsData":{"releaseVersion":"","langLibs":[],"modules":[{"relatedModules":[],"records":[],"classes":[],"objectTypes":[{"fields":[{"defaultValue":"","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startIndex","description":"The index within the string where the span starts.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"endIndex","description":"The index within the string following the end of the span.\nThe length of the span is `endIndex - startIndex`.\n","isDeprecated":false,"isReadOnly":false}],"methods":[{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"","isDeprecated":false,"isReadOnly":false}],"name":"substring","description":"Returns a string with the content of the span.\n","isDeprecated":false,"isReadOnly":false}],"isDistinct":false,"name":"Span","description":"A span of a string.\nA span is a substring of another string.\n","isDeprecated":false,"isReadOnly":true}],"clients":[],"listeners":[],"functions":[{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string in which to look for a match of `re`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"0","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startIndex","description":"the index within `str` at which to start looking for a match\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Span","category":"objectTypes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"a `Span` describing the match, or nil if no match was found\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"find","description":"Returns the first match of a regular expression within a string.\n\n```ballerina\nstring:RegExp r \u003d re `World`;\nr.find(\"Not A Match\") is () ⇒ true\nr.find(\"Hello World\") is regexp:Span ⇒ true\nr.find(\"Hello World\", 6) is regexp:Span ⇒ true\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string in which to look for matches of `re`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"0","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startIndex","description":"the index within `str` at which to start looking for matches\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Span","category":"objectTypes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"","description":"a list containing a `Span` for each match found\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"findAll","description":"Returns a list of all the matches of a regular expression within a string.\nAfter one match is found, it looks for the next match starting where the previous\nmatch ended, so the list of matches will be non-overlapping.\n\n```ballerina\nstring:RegExp r \u003d re `[bB].tt[a-z]*`;\nr.findAll(\"Not A Match\").length() ⇒ 0\nr.findAll(\"Butter was bought by Betty but the butter was bitter.\").length() ⇒ 4\nr.findAll(\"Butter was bought by Betty but the butter was bitter.\", 7).length() ⇒ 3\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string in which to look for matches of `re`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"0","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startIndex","description":"the index within `str` at which to start looking for matches\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Groups","category":"types","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"","description":"a list containing a `Group` for each match found\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"findAllGroups","description":"Returns the `Groups` of all the matches of a regular expression within a string.\nAfter one match is found, it looks for the next match starting where the previous\nmatch ended, so the list of matches will be non-overlapping.\n\n```ballerina\nstring:RegExp r \u003d re `(([a-z]u)(bble))`;\nr.findAllGroups(\"Not A Match\").length() ⇒ 0\nr.findAllGroups(\"rubble, trouble, bubble, hubble\").length() ⇒ 3\nr.findAllGroups(\"rubble, trouble, bubble, hubble\", 7).length() ⇒ 2\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string in which to look for a match of `re`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"0","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startIndex","description":"the index within `str` at which to start looking for a match\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Groups","category":"types","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"a `Groups` list describing the match, or nil if no match was found\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"findGroups","description":"Returns the `Groups` for the first match of a regular expression within a string.\n\n```ballerina\nstring:RegExp r \u003d re `([bB].tt[a-z]*)`;\nr.findGroups(\"Not A Match\") is () ⇒ true\nr.findGroups(\"Butter was bought by Betty but the butter was bitter.\") is regexp:Groups ⇒ true\nr.findGroups(\"Butter was bought by Betty but the butter was bitter.\", 7) is regexp:Groups ⇒ true\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string representation of a regular expression\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},"name":"","description":"the regular expression, or an error value if `str` is not a valid regular expression\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"fromString","description":"Constructs a regular expression from a string.\nThe syntax of the regular expression is the same as accepted by the `re` tagged data template expression.\n\n```ballerina\nregexp:fromString(\"AB+C*D{1,4}\") ⇒ re `AB+C*D{1,4}`\nregexp:fromString(\"AB+^*\") ⇒ error\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string in which to look for a match of `re`\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Groups","category":"types","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"a `Groups` list describing the match, or nil if there is not a full match; the\nfirst `Span` in the list will be all of `str`\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"fullMatchGroups","description":"Returns the `Groups` of the match of a regular expression that is a full match of a string.\nA match of the regular expression in a string is a full match if it\nstarts at index 0 and ends at index `n`, where `n` is the length of the string.\n\n```ballerina\nstring:RegExp r \u003d re `([0-9]+)×([0-9]+)`;\nr.fullMatchGroups(\"test: 1440×900\") is () ⇒ true\nr.fullMatchGroups(\"1440×900\") is regexp:Groups ⇒ true\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"true if there is full match of `re` with `str`, and false otherwise\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"isFullMatch","description":"Tests whether there is full match of regular expression with a string.\nA match of a regular expression in a string is a full match if it\nstarts at index 0 and ends at index `n`, where `n` is the length of the string.\n\n```ballerina\nstring:RegExp r \u003d re `A|Th.*ch|^`;\nr.isFullMatch(\"This is a Match\") ⇒ true\nr.isFullMatch(\"Not a complete Match\") ⇒ false\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string in which to look for a match of `re`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"0","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startIndex","description":"the index within `str` at which to look for a match; defaults to zero\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Span","category":"objectTypes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"a `Span` describing the match, or nil if `re` did not match at that index; the startIndex of the\n`Span` will always be equal to `startIndex`\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"matchAt","description":"Tests whether there is a match of a regular expression at a specific index in the string.\n\n```ballerina\nstring:RegExp r \u003d re `World`;\nr.matchAt(\"Hello World\") is () ⇒ true\nr.matchAt(\"Hello World\", 6) is regexp:Span ⇒ true\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string in which to look for a match of `re`\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"0","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startIndex","description":"the index within `str` at which to look for a match; defaults to zero\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Groups","category":"types","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"a `Groups` list describing the match, or nil if `re` did not match at that index; the startIndex of the\nfirst `Span` in the list will always be equal to the `startIndex` of the first member of the list\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"matchGroupsAt","description":"Returns the `Groups` of the match of a regular expression at a specific index in the string.\n\n```ballerina\nstring:RegExp r \u003d re `([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])?`;\nr.matchGroupsAt(\"time: 14:35:59\") is () ⇒ true\nr.matchGroupsAt(\"time: 14:35:59\", 6) is regexp:Groups ⇒ true\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string in which to perform the replacements\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Replacement","category":"types","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"replacement","description":"a `Replacement` that gives the replacement for the match\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"0","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startIndex","description":"the index within `str` at which to start looking for a match; defaults to zero\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"`str` with the first match, if any, replaced by the string specified by `replacement`\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"replace","description":"Replaces the first match of a regular expression.\n\n```ballerina\nstring:RegExp r \u003d re `0+`;\nr.replace(\"10010011\", \"*\") ⇒ 1*10011\nr.replace(\"10010011\", \"*\", 4) ⇒ 1001*11\nr.replace(\"122111\", \"*\") ⇒ 122111\nr.replace(\"10010011\", replaceFunction) ⇒ 1*10011\nr.replace(\"10010011\", replaceFunction, 4) ⇒ 1001*11\nisolated function replaceFunction(regexp:Groups groups) returns string \u003d\u003e \"*\";\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string in which to perform the replacements\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Replacement","category":"types","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"replacement","description":"a `Replacement` that gives the replacement for each match\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"0","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startIndex","description":"the index within `str` at which to start looking for matches; defaults to zero\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"`str` with every match replaced by the string specified by `replacement`\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"replaceAll","description":"Replaces all matches of a regular expression.\nAfter one match is found, it looks for the next match starting where the previous\nmatch ended, so the matches will be non-overlapping.\n\n```ballerina\nstring:RegExp r \u003d re `0+`;\nr.replaceAll(\"10010011\", \"*\") ⇒ 1*1*11\nr.replaceAll(\"10010011\", \"*\", 4) ⇒ 1001*11\nr.replaceAll(\"122111\", \"*\") ⇒ 122111\nr.replaceAll(\"10010011\", replaceFunction) ⇒ 121211\nr.replaceAll(\"10010011\", replaceFunction, 4) ⇒ 1001211\nisolated function replaceFunction(regexp:Groups groups) returns string \u003d\u003e groups[0].substring().length().toString();\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"RegExp","category":"not_found","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0},"name":"re","description":"the regular expression that specifies the separator\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"str","description":"the string to be split\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"","description":"a list of substrings of `str` separated by matches of `re`\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"split","description":"Splits a string into substrings separated by matches of a regular expression.\nThis finds the the non-overlapping matches of a regular expression and\nreturns a list of substrings of `str` that occur before the first match,\nbetween matches, or after the last match.  If there are no matches, then\n`[str]` will be returned.\n\n```ballerina\nstring:RegExp r \u003d re `,`;\nr.split(\"abc,cde,efg\") ⇒ [\"abc\",\"cde\",\"efg\"]\nr.split(\"abc cde efg\") ⇒ [\"abc cde efg\"]\n```\n\n","isDeprecated":false,"isReadOnly":false}],"constants":[],"annotations":[],"errors":[],"types":[{"name":"Groups","description":"A list providing detailed information about the match of a regular expression within string.\nEach member of the list identifies the `Span` within the string matched\nby each of the regular expression\u0027s capturing groups.\nThe member with index 0 corresponds to the entire regular expression.\nThe group with index i, where i \u003e 1,is the i-th capturing group;\nthis will be nil if the match of the regular expression did not use\na match of the capturing group.\nThe capturing groups within a regular expression are ordered by the position\nof their opening parenthesis.\n","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":true,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"readonly","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":true,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"Span","category":"objectTypes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"Span?...","category":"UNKNOWN","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":false,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}],"arrayDimensions":0},{"name":"Replacement","description":"The replacement for the match of a regular expression found within a string.\nA string value specifies that the replacement is a fixed string.\nA function that specifies that the replacement is constructed by calling a function for each match.\n","isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"orgName":"ballerina","moduleName":"lang.regexp","version":"0.0.0","name":"ReplacerFunction","category":"types","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},{"name":"ReplacerFunction","description":"A function that constructs the replacement for the match of a regular expression.\nThe `groups` parameter describes the match for which the replacement is to be constructed.\n","isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}],"enums":[],"variables":[],"id":"lang.regexp","summary":"The `lang.regexp` module corresponds to the `regexp` basic type.\n","description":"## Module overview\n\nThe `lang.regexp` module corresponds to the `regexp` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true}]},"searchData":{"modules":[{"id":"lang.regexp","description":"The `lang.regexp` module corresponds to the `regexp` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true}],"classes":[],"functions":[{"id":"find","description":"Returns the first match of a regular expression within a string.\n\n```ballerina\nstring:RegExp r \u003d re `World`;\nr.find(\"Not A Match\") is () ⇒ true\nr.find(\"Hello World\") is regexp:Span ⇒ true\nr.find(\"Hello World\", 6) is regexp:Span ⇒ true\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"findAll","description":"Returns a list of all the matches of a regular expression within a string.\nAfter one match is found, it looks for the next match starting where the previous\nmatch ended, so the list of matches will be non-overlapping.\n\n```ballerina\nstring:RegExp r \u003d re `[bB].tt[a-z]*`;\nr.findAll(\"Not A Match\").length() ⇒ 0\nr.findAll(\"Butter was bought by Betty but the butter was bitter.\").length() ⇒ 4\nr.findAll(\"Butter was bought by Betty but the butter was bitter.\", 7).length() ⇒ 3\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"findAllGroups","description":"Returns the `Groups` of all the matches of a regular expression within a string.\nAfter one match is found, it looks for the next match starting where the previous\nmatch ended, so the list of matches will be non-overlapping.\n\n```ballerina\nstring:RegExp r \u003d re `(([a-z]u)(bble))`;\nr.findAllGroups(\"Not A Match\").length() ⇒ 0\nr.findAllGroups(\"rubble, trouble, bubble, hubble\").length() ⇒ 3\nr.findAllGroups(\"rubble, trouble, bubble, hubble\", 7).length() ⇒ 2\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"findGroups","description":"Returns the `Groups` for the first match of a regular expression within a string.\n\n```ballerina\nstring:RegExp r \u003d re `([bB].tt[a-z]*)`;\nr.findGroups(\"Not A Match\") is () ⇒ true\nr.findGroups(\"Butter was bought by Betty but the butter was bitter.\") is regexp:Groups ⇒ true\nr.findGroups(\"Butter was bought by Betty but the butter was bitter.\", 7) is regexp:Groups ⇒ true\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromString","description":"Constructs a regular expression from a string.\nThe syntax of the regular expression is the same as accepted by the `re` tagged data template expression.\n\n```ballerina\nregexp:fromString(\"AB+C*D{1,4}\") ⇒ re `AB+C*D{1,4}`\nregexp:fromString(\"AB+^*\") ⇒ error\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fullMatchGroups","description":"Returns the `Groups` of the match of a regular expression that is a full match of a string.\nA match of the regular expression in a string is a full match if it\nstarts at index 0 and ends at index `n`, where `n` is the length of the string.\n\n```ballerina\nstring:RegExp r \u003d re `([0-9]+)×([0-9]+)`;\nr.fullMatchGroups(\"test: 1440×900\") is () ⇒ true\nr.fullMatchGroups(\"1440×900\") is regexp:Groups ⇒ true\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"isFullMatch","description":"Tests whether there is full match of regular expression with a string.\nA match of a regular expression in a string is a full match if it\nstarts at index 0 and ends at index `n`, where `n` is the length of the string.\n\n```ballerina\nstring:RegExp r \u003d re `A|Th.*ch|^`;\nr.isFullMatch(\"This is a Match\") ⇒ true\nr.isFullMatch(\"Not a complete Match\") ⇒ false\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"matchAt","description":"Tests whether there is a match of a regular expression at a specific index in the string.\n\n```ballerina\nstring:RegExp r \u003d re `World`;\nr.matchAt(\"Hello World\") is () ⇒ true\nr.matchAt(\"Hello World\", 6) is regexp:Span ⇒ true\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"matchGroupsAt","description":"Returns the `Groups` of the match of a regular expression at a specific index in the string.\n\n```ballerina\nstring:RegExp r \u003d re `([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])?`;\nr.matchGroupsAt(\"time: 14:35:59\") is () ⇒ true\nr.matchGroupsAt(\"time: 14:35:59\", 6) is regexp:Groups ⇒ true\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"replace","description":"Replaces the first match of a regular expression.\n\n```ballerina\nstring:RegExp r \u003d re `0+`;\nr.replace(\"10010011\", \"*\") ⇒ 1*10011\nr.replace(\"10010011\", \"*\", 4) ⇒ 1001*11\nr.replace(\"122111\", \"*\") ⇒ 122111\nr.replace(\"10010011\", replaceFunction) ⇒ 1*10011\nr.replace(\"10010011\", replaceFunction, 4) ⇒ 1001*11\nisolated function replaceFunction(regexp:Groups groups) returns string \u003d\u003e \"*\";\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"replaceAll","description":"Replaces all matches of a regular expression.\nAfter one match is found, it looks for the next match starting where the previous\nmatch ended, so the matches will be non-overlapping.\n\n```ballerina\nstring:RegExp r \u003d re `0+`;\nr.replaceAll(\"10010011\", \"*\") ⇒ 1*1*11\nr.replaceAll(\"10010011\", \"*\", 4) ⇒ 1001*11\nr.replaceAll(\"122111\", \"*\") ⇒ 122111\nr.replaceAll(\"10010011\", replaceFunction) ⇒ 121211\nr.replaceAll(\"10010011\", replaceFunction, 4) ⇒ 1001211\nisolated function replaceFunction(regexp:Groups groups) returns string \u003d\u003e groups[0].substring().length().toString();\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"split","description":"Splits a string into substrings separated by matches of a regular expression.\nThis finds the the non-overlapping matches of a regular expression and\nreturns a list of substrings of `str` that occur before the first match,\nbetween matches, or after the last match.  If there are no matches, then\n`[str]` will be returned.\n\n```ballerina\nstring:RegExp r \u003d re `,`;\nr.split(\"abc,cde,efg\") ⇒ [\"abc\",\"cde\",\"efg\"]\nr.split(\"abc cde efg\") ⇒ [\"abc cde efg\"]\n```\n\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"records":[],"constants":[],"errors":[],"types":[{"id":"Groups","description":"A list providing detailed information about the match of a regular expression within string.\nEach member of the list identifies the `Span` within the string matched\nby each of the regular expression\u0027s capturing groups.\nThe member with index 0 corresponds to the entire regular expression.\nThe group with index i, where i \u003e 1,is the i-th capturing group;\nthis will be nil if the match of the regular expression did not use\na match of the capturing group.\nThe capturing groups within a regular expression are ordered by the position\nof their opening parenthesis.\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Replacement","description":"The replacement for the match of a regular expression found within a string.\nA string value specifies that the replacement is a fixed string.\nA function that specifies that the replacement is constructed by calling a function for each match.\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ReplacerFunction","description":"A function that constructs the replacement for the match of a regular expression.\nThe `groups` parameter describes the match for which the replacement is to be constructed.\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"clients":[],"listeners":[],"annotations":[],"objectTypes":[{"id":"Span","description":"A span of a string.\nA span is a substring of another string.\n","moduleId":"lang.regexp","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"enums":[]}}