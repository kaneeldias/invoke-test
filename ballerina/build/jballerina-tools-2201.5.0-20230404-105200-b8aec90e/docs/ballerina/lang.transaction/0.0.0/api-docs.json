{"docsData":{"releaseVersion":"","langLibs":[],"modules":[{"relatedModules":[],"records":[{"fields":[{"defaultValue":"","annotationAttachments":[],"type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"name":"byte","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"xid","description":"Unique identifier for the transaction branch.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","annotationAttachments":[],"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"retryNumber","description":"The number of previous attempts in a sequence of retries.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"lang.transaction","version":"0.0.0","name":"Info","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"prevAttempt","description":"Information about the previous attempt in a sequence of retries.\nThis will be `()` if the `retryNumber` is 0.\n","isDeprecated":false,"isReadOnly":false},{"defaultValue":"","annotationAttachments":[],"type":{"orgName":"ballerina","moduleName":"lang.transaction","version":"0.0.0","name":"Timestamp","category":"objectTypes","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"startTime","description":"The time at which the transaction was started.\n","isDeprecated":false,"isReadOnly":false}],"isClosed":true,"name":"InfoInternal","description":"Internally used record to hold information about a transaction.\n","isDeprecated":false,"isReadOnly":false}],"classes":[],"objectTypes":[{"fields":[],"methods":[{"accessor":"","resourcePath":"","isIsolated":false,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"name":"int","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"milliseconds since 1970-01-01T00:00:00Z, not including leap seconds\n","isDeprecated":false,"isReadOnly":false}],"name":"toMillisecondsInt","description":"Returns milliseconds since 1970-01-01T00:00:00Z, not including leap seconds\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":false,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[],"returnParameters":[{"type":{"name":"string","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"string representation of the timestamp in ISO 8601 format\n","isDeprecated":false,"isReadOnly":false}],"name":"toString","description":"Returns a string representation of the timestamp in ISO 8601 format\n","isDeprecated":false,"isReadOnly":false}],"isDistinct":false,"name":"Timestamp","description":"An instant in time.\n","isDeprecated":false,"isReadOnly":true}],"clients":[],"listeners":[],"functions":[{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"name":"readonly","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"the data, or `()` if no data has been set.\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"getData","description":"Retrieves data associated with the current transaction branch.\n\nThe data is set using `setData`.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:setData({accessType: \"RO\"});\n        transaction:getData() ⇒ {\"accessType\":\"RO\"}\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:setData({accessType: \"RO\"});\n    transaction:getData() ⇒ {\"accessType\":\"RO\"}\n}\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":true,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":1,"elementType":{"name":"byte","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}},"name":"xid","description":"transaction id\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"lang.transaction","version":"0.0.0","name":"Info","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"information about the transaction\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"getInfo","description":"Returns information about the transaction with the specified xid.\n\n```ballerina\nbyte[] xid \u003d [48, 53, 101, 102, 101, 55];\ntransaction:getInfo(xid) ⇒ {\"xid\":[48, 53, 101, 102, 101, 55],\"retryNumber\":0,\"prevAttempt\":null,\"startTime\":2022-12-20 16:03:37,228}\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"name":"boolean","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"true if it is known that the transaction manager will,\nwhen it makes the decision whether to commit or rollback, decide\nto rollback\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"getRollbackOnly","description":"Tells whether it is known that the transaction will be rolled back.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:setRollbackOnly(error(\"marked as rollback only\"));\n        transaction:getRollbackOnly() ⇒ true\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:getRollbackOnly() ⇒ false\n}\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[],"returnParameters":[{"type":{"orgName":"ballerina","moduleName":"lang.transaction","version":"0.0.0","name":"Info","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"","description":"information about the current transaction\n","isDeprecated":false,"isReadOnly":false}],"annotationAttachments":[],"name":"info","description":"Returns information about the current transaction.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:Info info \u003d transaction:info();\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:Info info \u003d transaction:info();\n    info.xid ⇒ [100,102,53,51,97,57,57,51,45]\n}\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.transaction","version":"0.0.0","name":"CommitHandler","category":"types","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"handler","description":"the function to be called on commit\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"annotationAttachments":[],"name":"onCommit","description":"Adds a handler to be called if and when the global transaction commits.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:onCommit(onCommitHandle);\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:onCommit(onCommitHandle);\n}\nisolated function onCommitHandle(transaction:Info info) {\n    // Include the code to be executed when the transaction commits.\n}\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"orgName":"ballerina","moduleName":"lang.transaction","version":"0.0.0","name":"RollbackHandler","category":"types","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"handler","description":"the function to be called on rollback\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"annotationAttachments":[],"name":"onRollback","description":"Adds a handler to be called if and when the global transaction rolls back.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:onRollback(onRollBackHandle);\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:onRollback(onRollBackHandle);\n}\nisolated function onRollBackHandle(transaction:Info info, error? cause, boolean willRetry) {\n    // Include the code to be executed when the transaction rollback.\n}\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":true,"parameters":[{"defaultValue":"","type":{"name":"readonly","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"data","description":"Data to be set\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"annotationAttachments":[],"name":"setData","description":"Associates some data with the current transaction branch.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:setData({accessType: \"RO\"});\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:setData({accessType: \"RO\"});\n}\n```\n\n","isDeprecated":false,"isReadOnly":false},{"accessor":"","resourcePath":"","isIsolated":true,"isRemote":false,"isResource":false,"isExtern":false,"parameters":[{"defaultValue":"","type":{"name":"error","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},"name":"e","description":"the error that caused the rollback or `()`, if there is none\n","isDeprecated":false,"isReadOnly":false}],"returnParameters":[],"annotationAttachments":[],"name":"setRollbackOnly","description":"Prevents the global transaction from committing successfully.\n\nThis ask the transaction manager that when it makes the decision\nwhether to commit or rollback, it should decide to rollback.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:setRollbackOnly(error(\"marked as rollback only\"));\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:setRollbackOnly(error(\"marked as rollback only\"));\n}\n```\n\n","isDeprecated":false,"isReadOnly":false}],"constants":[],"annotations":[],"errors":[{"isDistinct":true,"name":"Error","description":"Type of error returned by commit action.\n","isDeprecated":false,"isReadOnly":false}],"types":[{"name":"CommitHandler","description":"Type of a commit handler function.\n\n","isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},{"name":"Info","description":"Information about a transaction that does not change\nafter the transaction is started.\n","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":true,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"name":"readonly","category":"builtin","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"lang.transaction","version":"0.0.0","name":"InfoInternal","category":"records","isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0},{"name":"RollbackHandler","description":"Type of a rollback handler function.\n\n","isAnonymousUnionType":true,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"isAnonymousUnionType":false,"isInclusion":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isDeprecated":false,"isPublic":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"arrayDimensions":0}],"arrayDimensions":0}],"enums":[],"variables":[],"id":"lang.transaction","summary":"The `lang.transaction` module supports transactions.","description":"## Module overview\n\nThe `lang.transaction` module supports transactions.","orgName":"ballerina","version":"0.0.0","isDefaultModule":true}]},"searchData":{"modules":[{"id":"lang.transaction","description":"The `lang.transaction` module supports transactions.","orgName":"ballerina","version":"0.0.0","isDefaultModule":true}],"classes":[],"functions":[{"id":"getData","description":"Retrieves data associated with the current transaction branch.\n\nThe data is set using `setData`.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:setData({accessType: \"RO\"});\n        transaction:getData() ⇒ {\"accessType\":\"RO\"}\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:setData({accessType: \"RO\"});\n    transaction:getData() ⇒ {\"accessType\":\"RO\"}\n}\n```\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getInfo","description":"Returns information about the transaction with the specified xid.\n\n```ballerina\nbyte[] xid \u003d [48, 53, 101, 102, 101, 55];\ntransaction:getInfo(xid) ⇒ {\"xid\":[48, 53, 101, 102, 101, 55],\"retryNumber\":0,\"prevAttempt\":null,\"startTime\":2022-12-20 16:03:37,228}\n```\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getRollbackOnly","description":"Tells whether it is known that the transaction will be rolled back.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:setRollbackOnly(error(\"marked as rollback only\"));\n        transaction:getRollbackOnly() ⇒ true\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:getRollbackOnly() ⇒ false\n}\n```\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"info","description":"Returns information about the current transaction.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:Info info \u003d transaction:info();\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:Info info \u003d transaction:info();\n    info.xid ⇒ [100,102,53,51,97,57,57,51,45]\n}\n```\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"onCommit","description":"Adds a handler to be called if and when the global transaction commits.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:onCommit(onCommitHandle);\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:onCommit(onCommitHandle);\n}\nisolated function onCommitHandle(transaction:Info info) {\n    // Include the code to be executed when the transaction commits.\n}\n```\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"onRollback","description":"Adds a handler to be called if and when the global transaction rolls back.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:onRollback(onRollBackHandle);\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:onRollback(onRollBackHandle);\n}\nisolated function onRollBackHandle(transaction:Info info, error? cause, boolean willRetry) {\n    // Include the code to be executed when the transaction rollback.\n}\n```\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"setData","description":"Associates some data with the current transaction branch.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:setData({accessType: \"RO\"});\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:setData({accessType: \"RO\"});\n}\n```\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"setRollbackOnly","description":"Prevents the global transaction from committing successfully.\n\nThis ask the transaction manager that when it makes the decision\nwhether to commit or rollback, it should decide to rollback.\n\n```ballerina\nfunction createEntity() returns error? {\n    transaction {\n        transaction:setRollbackOnly(error(\"marked as rollback only\"));\n        check commit;\n    }\n}\ntransactional function updateDB() {\n    transaction:setRollbackOnly(error(\"marked as rollback only\"));\n}\n```\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"records":[{"id":"InfoInternal","description":"Internally used record to hold information about a transaction.\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"constants":[],"errors":[{"id":"Error","description":"Type of error returned by commit action.\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"types":[{"id":"CommitHandler","description":"Type of a commit handler function.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Info","description":"Information about a transaction that does not change\nafter the transaction is started.\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"RollbackHandler","description":"Type of a rollback handler function.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"clients":[],"listeners":[],"annotations":[],"objectTypes":[{"id":"Timestamp","description":"An instant in time.\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"enums":[]}}